[package]
name = "wasm-test-02"
version = "0.1.0"
authors = ["Rossi Lorenzo <snowycoder@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
wasm-bindgen = "0.2"
bitflags = "1.1.0"
js-sys = "0.3"
common = { path = "../common" }
cgmath = "0.17.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = "0.1.1"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = false }

[dependencies.specs]
version = "0.15.0"
default-features = false
features = []

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
  "ErrorEvent",
  "EventTarget",
  "MessageEvent",
  "WebSocket",
  "BinaryType",
  "Document",
  "Element",
  "HtmlCanvasElement",
  "Node",
  "KeyboardEvent",
  "WebGlBuffer",
  "WebGl2RenderingContext",
  "WebGlVertexArrayObject",
  "WebGlUniformLocation",
  "WebGlProgram",
  "WebGlShader",
  "Window",
]


[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "z"
debug = true
